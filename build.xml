<project name="JeuDeDames" default="dist" basedir="." xmlns:jacoco="antlib:org.jacoco.ant" xmlns:sonar="antlib:org.sonar.ant">
    <description>Jeu de Dames développé dans le cadre des TPs de MEDEV</description>
    <!-- set global properties for this build -->
    <property name="build.dir" value="build"/>
    <property name="dist.dir" value="dist"/>
    <property name="lib.dir" value="lib"/>
    <property name="doc.dir" value="lib"/>
    <property name="main.build.dir" value="${build.dir}/main"/>
    <property name="main.src.dir" value="src/main/java"/>
    <property name="test.build.dir" value="${build.dir}/test"/>
    <property name="test.src.dir" value="src/test/java"/>

    <!-- SonarQube Properties -->
    <loadproperties srcFile="sonar-project.properties"/>
    <property name="sonar.sources" value="${main.src.dir}"/>
    <property name="sonar.java.binaries" value="${main.build.dir}"/>
    <property name="sonar.jacoco.reportPaths" value="${build.dir}/jacoco.exec"/>

    <path id="classpath.test">
      <pathelement location="lib/junit-4.9.jar"/>
      <pathelement location="lib/hamcrest-core-1.3.jar"/>
      <pathelement location="${main.build.dir}"/>
    </path>

    <target name="init" depends="getDependencies">
        <!-- Create the time stamp -->
        <tstamp>
          <format property="time.stamp" pattern="yyyy-MM-dd_HH:mm:ss"/>
        </tstamp>

        <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
            <classpath path="lib/jacocoant.jar"/>
        </taskdef>

        <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
            <!-- Update the following line, or put the "sonarqube-ant-task-*.jar" file in your "$HOME/.ant/lib" folder -->
            <classpath path="${lib.dir}/sonarqube-ant-task-2.5.jar" />
        </taskdef>
    </target>

    <target name="compile" depends="init">
        <echo message="Building application..."/>
        <mkdir dir="${main.build.dir}"/>
        <javac srcdir="${main.src.dir}" destdir="${main.build.dir}" includeantruntime="false"/>
        <echo message="Done!"/>
    </target>

    <target name="checkDependencies">
        <condition property="lib.availables">
            <not>
            <and>
                <available file="${lib.dir}/junit-4.9.jar"/>
                <available file="${lib.dir}/sonarqube-ant-task-2.5.jar"/>
            </and>
            </not>
        </condition>
    </target>

    <target name="getDependencies" depends="checkDependencies" if="lib.availables">
        <echo message="junit missing"/>
        <mkdir dir="${lib.dir}"/>
        <get src="http://central.maven.org/maven2/junit/junit/4.9/junit-4.9.jar"
             dest="${lib.dir}/junit-4.9.jar">
        </get>
        <get src="http://central.maven.org/maven2/org/sonarsource/scanner/ant/sonarqube-ant-task/2.5/sonarqube-ant-task-2.5.jar"
            dest="${lib.dir}/sonarqube-ant-task-2.5.jar">
        </get>
    </target>

    <target name="test-compile" depends="compile">
        <echo message="Building tests..."/>
        <mkdir dir="${test.build.dir}"/>
        <javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeantruntime="false">
            <classpath refid="classpath.test"/>
        </javac>
        <echo message="Done!"/>
    </target>

    <target name="test" depends="test-compile">
        <junit printsummary="on" haltonfailure="yes" fork="true">
            <classpath>
                <path refid="classpath.test"/>
                <pathelement location="${test.build.dir}"/>
            </classpath>
            <formatter type="brief" usefile="false"/>
            <batchtest>
                <fileset dir="${test.src.dir}" includes="**/*Test.java"/>
            </batchtest>
        </junit>
    </target>

    <target name="dist" depends="test"
            description="generate the distribution">
        <!-- Create the distribution directory -->
        <mkdir dir="${dist.dir}"/>

        <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
        <echo message="Packaging..."/>
        <jar jarfile="${dist.dir}/JeuDeDames-${time.stamp}.jar" basedir="${main.build.dir}"/>
        <echo message="Done!"/>
    </target>

    <target name="doc" depends="init" description="generate documentation">
        <mkdir dir="${doc.dir}"/>
        <javadoc sourcepath="${main.src.dir}" destdir="${doc.dir}"/>
    </target>

    <target name="analyse" depends="compile">
        <jacoco:coverage destfile="${build.dir}/jacoco.exec">
            <junit fork="true" forkmode="once">
                <test name="fr.ecn.dames.Main"/>
                <classpath path="${test.build.dir}"/>
            </junit>
        </jacoco:coverage>
        <!-- Execute SonarQube Scanner for Ant Analysis -->
        <sonar:sonar />
    </target>

    <target name="clean"
            description="clean up">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <echo message="Done!"/>
    </target>
</project>
